version: "1.5"

# 流水线作业的触发选项
only:
  triggerType:
    - pullRequest # 创建 PR 及向 PR 分支 push 代码时触发
    - tagPush # 新建 tag 时触发
    - push # push 代码触发

stages:
  - 静态扫描
  - 单元测试

单元测试:
  only:
    triggerType:
      - pullRequest
  stage: 单元测试
  component: linkq-ut
  inputs:
    accurate: false
    ciConfig:
      jdkVersion: "1.8"
      mvnVersion: "3.5.4"
      encoding: "UTF-8"
      mvnArgs: "-Dmaven.gitcommitid.skip=false -Dmaven.repo.local=/home/jenkins/agent/aci/.repository" #mvn参数 -D形式
      parallelCount: "4"
      coverageExclusions: "**/test/**,**/controller/**,**/*Exception*,**/*Entity*,**/*Repository*,
          **/*Configuration*,**/*Dao*,**/*Constant*,**/*Dto*,**/*Param*,**/*Req*,**/*Resp*,**/*Response*,
          **/*Request*,**/integration/**,**/model/**,**/constant/**"
    customEnvironmentVariables:
      ODC_CONFIG_SECRET: ${{parameters.ODC_CONFIG_SECRET}}
      ODC_OB_DEFAULT_MYSQL_COMMANDLINE: ${{parameters.ODC_OB_DEFAULT_MYSQL_COMMANDLINE}}
      ODC_OB_DEFAULT_ORACLE_COMMANDLINE: ${{parameters.ODC_OB_DEFAULT_ORACLE_COMMANDLINE}}
      ODC_MYSQL_DEFAULT_COMMANDLINE: ${{parameters.ODC_MYSQL_DEFAULT_COMMANDLINE}}
      ODC_DORIS_DEFAULT_COMMANDLINE: ${{parameters.ODC_DORIS_DEFAULT_COMMANDLINE}}
      ODC_ORACLE_DEFAULT_HOST: ${{parameters.ODC_ORACLE_DEFAULT_HOST}}
      ODC_ORACLE_DEFAULT_PORT: ${{parameters.ODC_ORACLE_DEFAULT_PORT}}
      ODC_ORACLE_DEFAULT_USERNAME: ${{parameters.ODC_ORACLE_DEFAULT_USERNAME}}
      ODC_ORACLE_DEFAULT_PASSWORD: ${{parameters.ODC_ORACLE_DEFAULT_PASSWORD}}
      ODC_ORACLE_DEFAULT_SID: ${{parameters.ODC_ORACLE_DEFAULT_SID}}
      ODC_ORACLE_DEFAULT_SERVICENAME: ${{parameters.ODC_ORACLE_DEFAULT_SERVICENAME}}
      ODC_ORACLE_DEFAULT_ROLE: ${{parameters.ODC_ORACLE_DEFAULT_ROLE}}
  config:
    afterExecute:
      checkRule:
        - ${{outputs.casePassRate}} >= 100 #通过率
        # - ${{outputs.lineCoverage}} >= 100 #全量行覆盖率
        # - ${{outputs.changeLineCoverage}} >= 100 #变更行覆盖率
        # - ${{outputs.branchCoverage}} >= 100 #分支覆盖率
        # - ${{outputs.changeBranchCoverage}} >= 100 #变更分支覆盖率

PMD扫描:
  stage: 静态扫描
  component: pmd
  config:
    isAllowSkip: true
  inputs:
    encoding: UTF-8
    excludes:
      - "**/*.interp"
      - "**/*.tokens"
      - "**/resources/**"
      - "**/test/**"
      - "distribution/**"
      - "builds/**"
      - "conf/**"
      - "**/target/**"
  checkRule:
    - blocker = 0 && critical = 0

STC扫描:
  stage: 静态扫描
  plugin: STC
  pluginConfig:
    specifiedTenantId: oceanbase # 使用oceanbase规则进行扫描，而不是用主站规则
  checkRule:
    - total <= 10
    - urgent = 0 && high = 0

代码格式检查:
  stage: 静态扫描
  agent:
    docker:
      image: reg.docker.alibaba-inc.com/oceanbase/odc-build:latest
  script:
    - CURRENT_DIR=$(pwd)
    - script/create_setting.sh "$CURRENT_DIR/settings.xml"
    - export LICENSE_VIOLATION_MESSAGE=$(mvn license:check -s $CURRENT_DIR/settings.xml| grep "[ERROR]" | grep "Failed to execute goal")
    - export VIOLATION_MESSAGE=$(mvn impsort:check formatter:validate -s $CURRENT_DIR/settings.xml | grep "[ERROR]" | grep "Failed to execute goal")
    - export HAS_FORMAT_VIOLATION=$([[ ! -z "$VIOLATION_MESSAGE" ]] && echo 1 || echo 0)
    - export HAS_LICENSE_VIOLATION=$([[ ! -z "$LICENSE_VIOLATION_MESSAGE" ]] && echo 1 || echo 0)
    - echo "${VIOLATION_MESSAGE}" > "format-violations.txt"
    - echo "${LICENSE_VIOLATION_MESSAGE}" > "license-violations.txt"
  variables:
    - LICENSE_VIOLATION_MESSAGE
    - VIOLATION_MESSAGE
    - HAS_FORMAT_VIOLATION
    - HAS_LICENSE_VIOLATION
  checkRule:
    - HAS_FORMAT_VIOLATION = 0
    - HAS_LICENSE_VIOLATION = 0
  publisher:
    archiveArtifacts: 'format-violations.txt,license-violations.txt'
