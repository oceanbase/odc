# built-in snippet for OceanBase Oracle mode
- name: oceanbase Oracle query unit list
  dialect_type: OB_ORACLE
  tags: [ 'dba','oceanbase' ]
  type: DQL
  min_version: 4.0.0
  max_version: ~
  description: 'Query unit list for OceanBase Oracle mode'
  prefix: query_unit_list
  body: |
    SELECT
      SVR_IP,
      SVR_PORT,
      UNIT_ID,
      TENANT_ID,
      ZONE,
      ZONE_TYPE,
      REGION,
      MAX_CPU,
      MIN_CPU,
      round(memory_size / 1024 / 1024 / 1024) memory_size_gb,
      MAX_IOPS,
      MIN_IOPS,
      IOPS_WEIGHT,
      round(log_disk_size / 1024 / 1024 / 1024) log_disk_size_gb,
      round(LOG_DISK_IN_USE / 1024 / 1024 / 1024) LOG_DISK_IN_USE_GB,
      round(DATA_DISK_IN_USE / 1024 / 1024 / 1024) DATA_DISK_IN_USE_GB,
      STATUS,
      CREATE_TIME
    FROM
      GV\$OB_UNITS;
- name: oceanbase Oracle query cluster info
  dialect_type: OB_ORACLE
  tags: [ 'dba','oceanbase' ]
  type: DQL
  min_version: 4.0.0
  max_version: ~
  description: 'Query OceanBase cluster information'
  prefix: query_cluster_info
  body: |
    SELECT NAME, VALUE 
    FROM 
      GV\$OB_PARAMETERS 
    WHERE 
      NAME IN ('cluster', 'cluster_id');
- name: oceanbase Oracle query tenant scope parameters
  dialect_type: OB_ORACLE
  tags: [ 'dba','oceanbase' ]
  type: DQL
  min_version: 4.0.0
  max_version: ~
  description: 'Query OceanBase tenant scope parameters'
  prefix: query_tenant_scope_parameters
  body: |
    SELECT
      ZONE,
      SVR_IP,
      SVR_PORT,
      NAME,
      VALUE
    FROM
      GV\$OB_PARAMETERS
    WHERE
      SCOPE = 'TENANT';
- name: oceanbase Oracle query major compaction
  dialect_type: OB_ORACLE
  tags: [ 'dba','oceanbase' ]
  type: DQL
  min_version: 4.0.0
  max_version: ~
  description: 'Query major compaction information'
  prefix: query_major_compaction
  body: |
    SELECT
      FROZEN_SCN,
      GLOBAL_BROADCAST_SCN,
      LAST_SCN,
      LAST_FINISH_TIME,
      START_TIME,
      STATUS,
      IS_ERROR,
      IS_SUSPENDED,
      INFO
    FROM
      DBA_OB_MAJOR_COMPACTION;
- name: oceanbase Oracle query tenant information
  dialect_type: OB_ORACLE
  tags: [ 'dba','oceanbase' ]
  type: DQL
  min_version: 4.0.0
  max_version: ~
  description: 'Query OceanBase tenant information'
  prefix: query_tenant_information
  body: |
    SELECT
      TENANT_ID,
      TENANT_NAME,
      TENANT_TYPE,
      PRIMARY_ZONE,
      LOCALITY,
      COMPATIBILITY_MODE,
      STATUS,
      LOCKED,
      IN_RECYCLEBIN,
      CURRENT_TIMESTAMP - CREATE_TIME as UPTIME
    FROM
     DBA_OB_TENANTS;
- name: oceanbase Oracle query module memory usage
  dialect_type: OB_ORACLE
  tags: [ 'dba','oceanbase' ]
  type: DQL
  min_version: 4.0.0
  max_version: ~
  description: Query module memory usage for OceanBase Oracle mode
  prefix: query_module_memory_usage
  body: |
    SELECT
      SVR_IP,
      MOD_NAME,
      ROUND(SUM(USED) / 1024 / 1024, 2) AS USED_MB
    FROM
      GV\$OB_MEMORY
    GROUP BY MOD_NAME, SVR_IP
    ORDER BY USED_MB DESC;
- name: oceanbase Oracle query memstore usage
  dialect_type: OB_ORACLE
  tags: [ 'dba','oceanbase' ]
  type: DQL
  min_version: 4.0.0
  max_version: ~
  description: Query memstore information for OceanBase Oracle mode
  prefix: query_memstore_information
  body: |
    SELECT
      SVR_IP,
      SVR_PORT,
      TENANT_ID,
      ROUND(ACTIVE_SPAN / 1024 / 1024 / 1024, 2) ACTIVE_GB,
      ROUND(FREEZE_TRIGGER / 1024 / 1024 / 1024, 2) FREEZE_TRIGGER_GB,
      ROUND(MEMSTORE_LIMIT / 1024 / 1024 / 1024, 2) MEMSTORE_LIMIT_GB,
      ROUND(MEMSTORE_USED / 1024 / 1024 / 1024, 2) MEMSTORE_USED_GB,
      FREEZE_CNT
    FROM
     GV\$OB_MEMSTORE;
- name: oceanbase Oracle query degraded log stat
  dialect_type: OB_ORACLE
  tags: [ 'dba','oceanbase' ]
  type: DQL
  min_version: 4.0.0
  max_version: ~
  description: Query degraded log stat for OceanBase Oracle mode
  prefix: query_degraded_log_stat
  body: |
    SELECT
      LS.TENANT_ID,
      LS.LS_ID,
      LS.SVR_IP,
      LS.SVR_PORT,
      LS.ROLE,
      LS.ARBITRATION_MEMBER,
      LS.DEGRADED_LIST
    FROM
      GV\$OB_LOG_STAT LS,
      DBA_OB_TENANTS T
    WHERE
      DEGRADED_LIST <> ''
      AND LS.TENANT_ID = T.TENANT_ID
      AND TENANT_TYPE != 'META';
- name: oceanbase Oracle query compaction progress
  dialect_type: OB_ORACLE
  tags: [ 'dba','oceanbase' ]
  type: DQL
  min_version: 4.0.0
  max_version: ~
  description: Query compaction progress for OceanBase Oracle mode
  prefix: query_compaction_progress
  body: |
    -- query compaction progress for last 5 compactions
    SELECT
      COMPACTION_SCN,
      SUM(TOTAL_TABLET_COUNT) as TOTAL_TABLET_COUNT,
      SUM(UNFINISHED_TABLET_COUNT) as UNFINISHED_TABLET_COUNT,
      ROUND(100 * (1 - SUM(UNFINISHED_TABLET_COUNT) / SUM(TOTAL_TABLET_COUNT)),2) AS COMPACTION_PROGRESS_PERCENTAGE,
      SUM(DATA_SIZE) as DATA_SIZE,
      SUM(UNFINISHED_DATA_SIZE) as UNFINISHED_DATA_SIZE,
      MIN(START_TIME) as START_TIME,
      MAX(ESTIMATED_FINISH_TIME) as ESTIMATED_FINISH_TIME
    FROM
      GV\$OB_COMPACTION_PROGRESS
    GROUP BY COMPACTION_SCN
    ORDER BY COMPACTION_SCN DESC
    FETCH FIRST 5 ROWS ONLY;
- name: oceanbase Oracle query compaction status
  dialect_type: OB_ORACLE
  tags: [ 'dba','oceanbase' ]
  type: DQL
  min_version: 4.0.0
  max_version: ~
  description: Query compaction status for OceanBase Oracle mode
  prefix: query_compaction_status
  body: |
    SELECT
      GLOBAL_BROADCAST_SCN AS BROADCAST_SCN,
      IS_ERROR AS ERROR,
      STATUS,
      FROZEN_SCN,
      LAST_SCN,
      IS_SUSPENDED AS SUSPEND,
      INFO,
      START_TIME,
      LAST_FINISH_TIME
    FROM
      DBA_OB_MAJOR_COMPACTION;
- name: oceanbase Oracle query mini merge history
  dialect_type: OB_ORACLE
  tags: [ 'dba','oceanbase' ]
  type: DQL
  min_version: 4.0.0
  max_version: ~
  description: Query mini merge history for OceanBase Oracle mode
  prefix: query_mini_merge_history
  body: |
    SELECT
      TENANT_ID,
      MIN(START_TIME) AS MIN_START_TIME,
      MAX(FINISH_TIME) AS MAX_FINISH_TIME,
      SUM(OCCUPY_SIZE) AS OCCUPY_SIZE,
      SUM(TOTAL_ROW_COUNT) AS TOTAL_ROW_COUNT,
      COUNT(1) AS TABLET_COUNT
    FROM
      GV\$OB_TABLET_COMPACTION_HISTORY
    WHERE
      TYPE = 'MINI_MERGE' 
    GROUP BY 
      TENANT_ID;
- name: oceanbase Oracle query cache size
  dialect_type: OB_ORACLE
  tags: [ 'dba','oceanbase' ]
  type: DQL
  min_version: 4.0.0
  max_version: ~
  description: Query cache size for OceanBase Oracle mode
  prefix: query_cache_size
  body: |
    SELECT
      TENANT_ID,
      SVR_IP,
      SVR_PORT,
      CACHE_NAME,
      ROUND(CACHE_SIZE/1024/1024,2) CACHE_SIZE_MB
    FROM
      GV\$OB_KVCACHE;
- name: oceanbase oracle stats top size tables in database
  dialect_type: OB_ORACLE
  tags: [ 'dba','oceanbase', 'stats' ]
  type: DQL
  min_version: 4.0.0
  max_version: ~
  description: Stats top size tables in database for OceanBase Oracle mode
  prefix: stats_top_size_tables_in_database
  body: |
    SELECT
      T1.DATABASE_NAME,
      T1.TABLE_NAME,
      SUM(ROUND(T2.DATA_SIZE / 1024 / 1024, 2)) AS DATA_SIZE_MB,
      SUM(ROUND(T2.REQUIRED_SIZE / 1024 / 1024, 2)) AS REQUIRED_SIZE_MB
    FROM (
      SELECT
        DATABASE_NAME,
        TABLE_ID,
        TABLE_NAME,
        TABLET_ID,
        PARTITION_NAME,
        SUBPARTITION_NAME
      FROM
        DBA_OB_TABLE_LOCATIONS
    ) T1
    LEFT JOIN (
      SELECT
        TABLET_ID,
        SVR_IP,
        SVR_PORT,
        DATA_SIZE,
        REQUIRED_SIZE
      FROM
        DBA_OB_TABLET_REPLICAS
    ) T2 
    ON T1.TABLET_ID = T2.TABLET_ID
    GROUP BY T1.DATABASE_NAME, T1.TABLE_NAME
    ORDER BY DATA_SIZE_MB DESC
    FETCH FIRST 10 ROWS ONLY;
- name: oceanbase oracle stats partition size for table
  dialect_type: OB_ORACLE
  tags: [ 'dba','oceanbase', 'stats' ]
  type: DQL
  min_version: 4.0.0
  max_version: ~
  description: stats partition size for table for OceanBase Oracle mode
  prefix: stats_partition_size_for_table
  body: |
    SELECT
      T1.DATABASE_NAME,
      T1.TABLE_NAME,
      T1.TABLET_ID,
      T1.PARTITION_NAME,
      T1.SUBPARTITION_NAME,
      T2.SVR_IP,
      T2.SVR_PORT,
      ROUND(T2.DATA_SIZE / 1024 / 1024, 2) AS DATA_SIZE_MB,
      ROUND(T2.REQUIRED_SIZE / 1024 / 1024, 2) AS REQUIRED_SIZE_MB
    FROM (
      SELECT
        DATABASE_NAME,
        TABLE_ID,
        TABLE_NAME,
        TABLET_ID,
        PARTITION_NAME,
        SUBPARTITION_NAME
      FROM
        DBA_OB_TABLE_LOCATIONS
    ) T1
    LEFT JOIN (
      SELECT
        TABLET_ID,
        SVR_IP,
        SVR_PORT,
        DATA_SIZE,
        REQUIRED_SIZE
      FROM
        DBA_OB_TABLET_REPLICAS
    ) T2 
    ON T1.TABLET_ID = T2.TABLET_ID
    WHERE T1.DATABASE_NAME = SYS_CONTEXT('USERENV', 'CURRENT_SCHEMA')
        AND T1.TABLE_NAME='${1:table_name}';
- name: oceanbase Oracle collect sql plan monitor
  dialect_type: OB_ORACLE
  tags: [ 'dba','oceanbase' ]
  type: DQL
  min_version: 4.0.0
  max_version: ~
  description: Collect sql plan monitor information for OceanBase Oracle mode
  prefix: collect_sql_plan_monitor
  body: |
    -- The SQL Plan Monitor collects all relevant information pertaining to the execution of a SQL statement.
    --
    -- manual collect sql plan monitor data steps
    -- 1. add /*+ monitor */ HINT for the sql statement you want to trace by sql plan monitor.
    -- 2. then execute the target sql statement.
    -- 3. collect summary and details information use below 2 query.
    -- 4. export collect data, transfer to OceanBase support team.
    --
    -- Operator explanation:
    -- * open_dt signifies the time interval between the operator's Open and Close.
    -- * row_dt represents the time interval from when the operator emits its first row to when it emits the OB_ITER_END marker.
    -- * If the value is NULL, it indicates that either no first row has been emitted or OB_ITER_END has not been emitted.
    
    set @target_trace_id='${1:target_trace_id}';

    -- query summary
    SELECT
      OP_ID,
      OP,
      OUTPUT_ROWS,
      RESCAN,
      THREADS,(CLOSE_TIME - OPEN_TIME) OPEN_DT,
      (LAST_ROW_EOF_TIME - FIRST_ROW_TIME) ROW_DT,
      OPEN_TIME,
      CLOSE_TIME,
      FIRST_ROW_TIME,
      LAST_ROW_EOF_TIME
    FROM
    (
        SELECT
          PLAN_LINE_ID OP_ID,
          CONCAT(LPAD(' ', MAX(PLAN_DEPTH), ' '), PLAN_OPERATION) OP,
          SUM(OUTPUT_ROWS) OUTPUT_ROWS,
          SUM(STARTS) RESCAN,
          MIN(FIRST_REFRESH_TIME) OPEN_TIME,
          MAX(LAST_REFRESH_TIME) CLOSE_TIME,
          MIN(FIRST_CHANGE_TIME) FIRST_ROW_TIME,
          MAX(LAST_CHANGE_TIME) LAST_ROW_EOF_TIME,
          COUNT(1) THREADS
        FROM
          GV\$SQL_PLAN_MONITOR
        WHERE
          TRACE_ID = @TARGET_TRACE_ID
        GROUP BY
          PLAN_LINE_ID,
          PLAN_OPERATION,
          PLAN_DEPTH
          ORDER BY
          PLAN_LINE_ID
    ) SPM;
    
    -- QUERY DETAILS
    SELECT
      OP_ID,
      THREAD,
      OP,
      OUTPUT_ROWS,
      RESCAN,
      (CLOSE_TIME - OPEN_TIME) OPEN_DT,
      (LAST_ROW_EOF_TIME - FIRST_ROW_TIME) ROW_DT,
      OPEN_TIME,
      CLOSE_TIME,
      FIRST_ROW_TIME,
      LAST_ROW_EOF_TIME
    FROM
    (
        SELECT
          PLAN_LINE_ID OP_ID,
          PROCESS_NAME THREAD,
          CONCAT(LPAD(' ', PLAN_DEPTH, ' '), PLAN_OPERATION) OP,
          OUTPUT_ROWS,
          STARTS RESCAN,
          FIRST_REFRESH_TIME OPEN_TIME,
          LAST_REFRESH_TIME CLOSE_TIME,
          FIRST_CHANGE_TIME FIRST_ROW_TIME,
          LAST_CHANGE_TIME LAST_ROW_EOF_TIME
        FROM
          GV\$SQL_PLAN_MONITOR
        WHERE
          TRACE_ID = @TARGET_TRACE_ID
        ORDER BY
          PLAN_LINE_ID,
          PROCESS_NAME
    ) SPM;
