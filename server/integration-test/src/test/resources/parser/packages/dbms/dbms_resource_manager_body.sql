CREATE OR REPLACE PACKAGE BODY dbms_resource_manager AS

FUNCTION QPARAM(PARAM VARCHAR2)
  RETURN VARCHAR2 IS
  FCHAR VARCHAR2(2 CHAR);
  ECHAR VARCHAR2(2 CHAR);
  LPAR  VARCHAR2(512 CHAR);
  RPAR  VARCHAR2(512 CHAR);
  PLEN  INTEGER;
  BEGIN

  IF PARAM IS NULL THEN
    RETURN PARAM;
  END IF;

  PLEN := LENGTH(PARAM);

  IF SUBSTR(PARAM,PLEN,1) = CHR(0) THEN
    PLEN := PLEN - 1;
    LPAR := SUBSTR(PARAM, 1, PLEN);
    IF LPAR IS NULL THEN
      RETURN LPAR;
    END IF;
  ELSE
    LPAR := PARAM;
  END IF;

  FCHAR := SUBSTR(LPAR,1,1);
  ECHAR := SUBSTR(LPAR,PLEN,1);


  IF FCHAR != '"' OR ECHAR != '"' THEN
    RPAR := UPPER(LPAR);
  ELSE
    RPAR := SUBSTR(LPAR,2,PLEN-2);
  END IF;

  RETURN RPAR;
END;

PROCEDURE CREATE_PLAN_INNER (
  PLAN IN VARCHAR2,
  COMMENT IN VARCHAR2 DEFAULT ''
);
pragma interface (C, CREATE_PLAN_INNER);

PROCEDURE DELETE_PLAN_INNER (
  PLAN    IN VARCHAR2
);
pragma interface (C, DELETE_PLAN_INNER);

PROCEDURE CREATE_CONSUMER_GROUP_INNER (
  consumer_group  IN VARCHAR2,
  comment         IN VARCHAR2
);
pragma interface (C, CREATE_CONSUMER_GROUP_INNER);

PROCEDURE DELETE_CONSUMER_GROUP_INNER (
  consumer_group IN VARCHAR2
);
pragma interface (C, DELETE_CONSUMER_GROUP_INNER);

PROCEDURE CREATE_PLAN_DIRECTIVE_INNER (
  PLAN              IN VARCHAR2,
  GROUP_OR_SUBPLAN  IN VARCHAR2,
  COMMENT           IN VARCHAR2,
  MGMT_P1           IN INT,
  UTILIZATION_LIMIT IN INT
);
pragma interface (C, CREATE_PLAN_DIRECTIVE_INNER);

PROCEDURE UPDATE_PLAN_DIRECTIVE_INNER (
  PLAN                  IN VARCHAR2,
  GROUP_OR_SUBPLAN      IN VARCHAR2,
  NEW_COMMENT           IN VARCHAR2,
  NEW_MGMT_P1           IN INT,
  NEW_UTILIZATION_LIMIT IN INT
);
pragma interface (C, UPDATE_PLAN_DIRECTIVE_INNER);

PROCEDURE DELETE_PLAN_DIRECTIVE_INNER (
  PLAN              IN VARCHAR2,
  GROUP_OR_SUBPLAN  IN VARCHAR2
);
pragma interface (C, DELETE_PLAN_DIRECTIVE_INNER);

PROCEDURE SET_CONSUMER_GROUP_MAPPING_INNER (
  attribute IN VARCHAR2,
  value IN VARCHAR2,
  consumer_group IN VARCHAR2
);
pragma interface (C, SET_CONSUMER_GROUP_MAPPING_INNER);





PROCEDURE CREATE_PLAN(
  PLAN IN VARCHAR2,
  COMMENT IN VARCHAR2 DEFAULT ''
) IS
  BEGIN
    CREATE_PLAN_INNER(UPPER(PLAN), COMMENT);
  END;


PROCEDURE DELETE_PLAN(
  PLAN    IN VARCHAR2
) IS
  BEGIN
    DELETE_PLAN_INNER(UPPER(PLAN));
  END;

PROCEDURE CREATE_CONSUMER_GROUP (
  CONSUMER_GROUP  IN VARCHAR2,
  COMMENT         IN VARCHAR2 DEFAULT NULL
) IS
  BEGIN
    CREATE_CONSUMER_GROUP_INNER(UPPER(CONSUMER_GROUP), COMMENT);
  END;

PROCEDURE DELETE_CONSUMER_GROUP (
  CONSUMER_GROUP IN VARCHAR2
) IS
  BEGIN
    DELETE_CONSUMER_GROUP_INNER(UPPER(CONSUMER_GROUP));
  END;

PROCEDURE CREATE_PLAN_DIRECTIVE (
  PLAN              IN VARCHAR2,
  GROUP_OR_SUBPLAN  IN VARCHAR2,
  COMMENT           IN VARCHAR2 DEFAULT '',
  MGMT_P1           IN INT DEFAULT 100,
  UTILIZATION_LIMIT IN INT DEFAULT 100
) IS
  BEGIN
    CREATE_PLAN_DIRECTIVE_INNER(UPPER(PLAN), UPPER(GROUP_OR_SUBPLAN), COMMENT, MGMT_P1, UTILIZATION_LIMIT);
  END;

PROCEDURE UPDATE_PLAN_DIRECTIVE (
  PLAN                  IN VARCHAR2,
  GROUP_OR_SUBPLAN      IN VARCHAR2,
  NEW_COMMENT           IN VARCHAR2 DEFAULT NULL,
  NEW_MGMT_P1           IN INT DEFAULT NULL,
  NEW_UTILIZATION_LIMIT IN INT DEFAULT NULL
) IS
  BEGIN
    UPDATE_PLAN_DIRECTIVE_INNER(UPPER(PLAN), UPPER(GROUP_OR_SUBPLAN), NEW_COMMENT, NEW_MGMT_P1, NEW_UTILIZATION_LIMIT);
  END;

PROCEDURE DELETE_PLAN_DIRECTIVE (
  PLAN              IN VARCHAR2,
  GROUP_OR_SUBPLAN  IN VARCHAR2
) IS
  BEGIN
    DELETE_PLAN_DIRECTIVE_INNER(UPPER(PLAN), UPPER(GROUP_OR_SUBPLAN));
  END;


PROCEDURE SET_CONSUMER_GROUP_MAPPING(
  ATTRIBUTE IN VARCHAR2,
  VALUE IN VARCHAR2,
  CONSUMER_GROUP IN VARCHAR2
) IS
  BEGIN
    SET_CONSUMER_GROUP_MAPPING_INNER(UPPER(ATTRIBUTE), QPARAM(VALUE), UPPER(CONSUMER_GROUP));
  END;

END dbms_resource_manager;
//

