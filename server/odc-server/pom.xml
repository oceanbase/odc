<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.oceanbase</groupId>
        <artifactId>odc-parent</artifactId>
        <version>4.3.1-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>
    <artifactId>odc-server</artifactId>

    <description>
        OceanBase Developer Center Server v${project.version}
    </description>

    <properties>
        <root-project.basedir>${project.parent.basedir}</root-project.basedir>
        <rpm.prefix>/opt</rpm.prefix>
        <rpm.basedir>odc</rpm.basedir>
        <rpm.rootdir>${rpm.prefix}/${rpm.basedir}</rpm.rootdir>
        <rpm.username>admin</rpm.username>
        <rpm.groupname>admin</rpm.groupname>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.oceanbase</groupId>
            <artifactId>odc-service</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.bouncycastle</groupId>
                    <artifactId>bcpkix-jdk15on</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-crypto</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.woodstox</groupId>
            <artifactId>woodstox-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-server</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>spring-security-crypto</artifactId>
                    <groupId>org.springframework.security</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.vladimir-bukhtoyarov</groupId>
            <artifactId>bucket4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
        </dependency>
        <dependency>
            <groupId>com.oceanbase</groupId>
            <artifactId>odc-migrate</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <includeSystemScope>true</includeSystemScope>
                    <classifier>executable</classifier>
                    <mainClass>com.oceanbase.odc.server.OdcServer</mainClass>
                    <addResources>true</addResources>
                    <fork>true</fork>
                    <layout>ZIP</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <verbose>true</verbose>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>
                        ${project.build.outputDirectory}/git.properties
                    </generateGitPropertiesFilename>
                    <gitDescribe>
                        <skip>false</skip>
                        <always>false</always>
                        <dirty>-dirty</dirty>
                    </gitDescribe>
                    <excludeProperties>
                        <excludeProperty>git.*.user.*</excludeProperty>
                        <!--git.commit.message.full|short cannot fetched in LinkE aci pipeline-->
                        <excludeProperty>git.commit.message.*</excludeProperty>
                    </excludeProperties>
                    <!-- set useNativeGit=true for around failed in Windows OS issue -->
                    <useNativeGit>${plugin.useNativeGit}</useNativeGit>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.2.0</version>
                <configuration>
                    <prefix>${rpm.prefix}</prefix>
                    <name>${odc-server.rpm.name}</name>
                    <group>Applications/Databases</group>
                    <packager>www.oceanbase.com</packager>
                    <version>${project.version}</version>
                    <autoRequires>true</autoRequires>
                    <needarch>true</needarch>
                    <defaultFilemode>444</defaultFilemode>
                    <defaultDirmode>755</defaultDirmode>
                    <defaultUsername>${rpm.username}</defaultUsername>
                    <defaultGroupname>${rpm.groupname}</defaultGroupname>
                    <defineStatements>
                        <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                    </defineStatements>

                    <!--release 参数非必填，缺省行为：artifactId snapshot 结尾时会使用时间戳，不是 snapshot 结尾时默认为 1
                      参见 https://github.com/mojohaus/rpm-maven-plugin/blob/rpm-maven-plugin-2.1.5/src/site/apt/ident-params.apt#L40-->
                    <!--<release></release>-->

                    <mappings>
                        <mapping>
                            <directory>${rpm.rootdir}</directory>
                            <sources>
                                <source>
                                    <location>${project.basedir}/../../CHANGELOG.md</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${rpm.rootdir}/log</directory>
                        </mapping>
                        <mapping>
                            <directory>${rpm.rootdir}/data</directory>
                        </mapping>
                        <mapping>
                            <directory>${rpm.rootdir}/bin</directory>
                            <filemode>755</filemode>
                            <sources>
                                <source>
                                    <location>${project.basedir}/../../script/start-odc.sh</location>
                                </source>
                                <source>
                                    <location>${project.basedir}/../../script/start-job.sh</location>
                                </source>
                                <source>
                                    <location>${project.basedir}/../../script/kill-odc.sh</location>
                                </source>
                                <source>
                                    <location>${project.basedir}/../../script/nohup-start-odc.sh</location>
                                </source>
                                <source>
                                    <location>${project.basedir}/../../script/generate-odc-ssl-certificate.sh</location>
                                </source>
                                <source>
                                    <location>${project.basedir}/../../import/obclient.tar.gz</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${rpm.rootdir}/lib</directory>
                            <sources>
                                <source>
                                    <location>target/${project.artifactId}-${project.version}-executable.jar</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${rpm.rootdir}/conf</directory>
                            <filemode>755</filemode>
                            <sources>
                                <source>
                                    <location>target/classes/log4j2.xml</location>
                                </source>
                                <source>
                                    <location>target/classes/log4j2-task.xml</location>
                                </source>
                                <source>
                                    <location>${project.basedir}/../../distribution/docker/resources/nginx.conf.template</location>
                                </source>
                                <source>
                                    <location>${project.basedir}/../../distribution/docker/resources/nginx.conf.https.template</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${rpm.rootdir}/plugins</directory>
                            <filemode>755</filemode>
                            <sources>
                                <source>
                                    <location>${project.basedir}/../../distribution/plugins</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${rpm.rootdir}/starters</directory>
                            <filemode>755</filemode>
                            <sources>
                                <source>
                                    <location>${project.basedir}/../../distribution/starters</location>
                                </source>
                            </sources>
                        </mapping>
                    </mappings>
                    <preinstallScriptlet>
                        <script>echo "installing ${project.name} ${project.version} now"</script>
                    </preinstallScriptlet>
                    <postinstallScriptlet>
                        <script>tar -xvzf ${rpm.rootdir}/bin/obclient.tar.gz -C ${rpm.rootdir} &amp;&amp;
                            rm -f ${rpm.rootdir}/bin/obclient.tar.gz &amp;&amp;
                            ln -s ${rpm.rootdir}/obclient/lib/libncurses.so.5 /usr/lib64/libncurses.so.5
                        </script>
                    </postinstallScriptlet>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
