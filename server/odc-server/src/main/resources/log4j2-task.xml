<?xml version="1.0" encoding="UTF-8"?>

<!-- log4j 自身的日志级别设置为 WARN，日志配置文件监视刷新的检查间隔设置为 30秒 -->
<Configuration status="WARN" monitorInterval="30" shutdownHook="disable">

    <!-- log4j2 配置参数 -->
    <Properties>
        <!-- ODC 日志目录可以通过 -Dodc.log.directory 指定系统变量（Java system properties），
             缺省为 odc 工作路径下的 log 目录，
             Linux 下更符合惯例的日志目录其实是 /var/log/odc
        -->
        <Property name="LOG_DIRECTORY">${sys:odc.log.directory}/task</Property>

        <!-- 日志格式配置，注意 %class, %line 成本较高，可能会导致日志性能下降大约 80%，当日志数据规模较大时需优化。
             如果每个类的 log 对象都基于当前类生成，%logger 可作为 %class 的替代。
        -->
        <Property name="LOG_PATTERN">
            [%date{yyyy-MM-dd HH:mm:ss.SSS}][%thread][%X{traceId},%X{spanId},%X{requestId}][%X{taskId}][%level][%class][%line]: %message%n
        </Property>
        <Property name="TASK_LOG_PATTERN">
            [%d{yyyy-MM-dd HH:mm:ss}] [%X{taskId}] [%p] %m%n
        </Property>
    </Properties>

    <Appenders>

        <!-- 控制台输出 -->
        <Console name="ConsoleAppender" target="SYSTEM_OUT">
            <PatternLayout pattern="${LOG_PATTERN}"/>
        </Console>

        <!-- ODC日志配置 -->
        <RollingFile name="ExecutorFileAppender" fileName="${LOG_DIRECTORY}/${ctx:taskId}/executor.log"
                     filePattern="${LOG_DIRECTORY}/${ctx:taskId}/executor-%d{yyyy-MM-dd}-%i.log">
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="100MB"/>
            </Policies>
            <DefaultRolloverStrategy max="20">
                <Delete basePath="${LOG_DIRECTORY}" maxDepth="2">
                    <IfFileName glob="*.log*"/>
                    <IfLastModified age="14d"/>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>


        <Routing name="TaskAllRoutingAppender">
            <Routes pattern="${TASK_LOG_PATTERN}">
                <Route>
                    <RollingFile name="Rolling-${ctx:taskId}"
                                 fileName="${LOG_DIRECTORY}/${ctx:taskId}/task-log.all"
                                 filePattern="${LOG_DIRECTORY}/${ctx:taskId}/${date:yyyy-MM}/task-log-%d{yyyy-MM-dd}-%i.all.gz">
                        <PatternLayout>
                            <pattern>[%d{yyyy-MM-dd HH:mm:ss}] [%X{taskId}] [%p] %m%n</pattern>
                        </PatternLayout>
                        <Filters>
                            <!-- TRACE < DEBUG < INFO < WARN < ERROR < FATAL -->
                            <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
                        </Filters>
                        <Policies>
                            <TimeBasedTriggeringPolicy interval="6" modulate="true"/>
                            <SizeBasedTriggeringPolicy size="10 MB"/>
                        </Policies>
                    </RollingFile>
                </Route>
            </Routes>
        </Routing>

        <Routing name="TaskWarnRoutingAppender">
            <Routes  pattern="${TASK_LOG_PATTERN}">
                <Route>
                    <RollingFile name="Rolling-${ctx:taskId}"
                                 fileName="${LOG_DIRECTORY}/${ctx:taskId}/task-log.warn"
                                 filePattern="${LOG_DIRECTORY}/${ctx:taskId}/${date:yyyy-MM}/task-log-%d{yyyy-MM-dd}-%i.warn.gz">
                        <PatternLayout>
                            <pattern>[%d{yyyy-MM-dd HH:mm:ss}] [%X{taskId}] [%p] %m%n</pattern>
                        </PatternLayout>
                        <Filters>
                            <!-- TRACE < DEBUG < INFO < WARN < ERROR < FATAL -->
                            <ThresholdFilter level="WARN" onMatch="ACCEPT" onMismatch="DENY"/>
                        </Filters>
                        <Policies>
                            <TimeBasedTriggeringPolicy interval="6" modulate="true"/>
                            <SizeBasedTriggeringPolicy size="10 MB"/>
                        </Policies>
                    </RollingFile>
                </Route>
            </Routes>
        </Routing>

    </Appenders>
    <Loggers>

        <!-- 执行器日志输出 start -->
        <Logger name="com.oceanbase.odc.server.OdcServer" level="INFO" additivity="false">
            <AppenderRef ref="ExecutorFileAppender"/>
        </Logger>
        <Logger name="com.oceanbase.odc.service.task.executor.TaskApplication" level="INFO" additivity="false">
            <AppenderRef ref="ExecutorFileAppender"/>
        </Logger>
        <Logger name="com.oceanbase.odc.service.task.executor.server" level="INFO" additivity="false">
            <AppenderRef ref="ExecutorFileAppender"/>
        </Logger>
        <Logger name="com.oceanbase.odc.service.task.executor.context" level="INFO" additivity="false">
            <AppenderRef ref="ExecutorFileAppender"/>
        </Logger>
        <Logger name="com.oceanbase.odc.service.task.executor.logger" level="INFO" additivity="false">
            <AppenderRef ref="ExecutorFileAppender"/>
        </Logger>
        <Logger name="com.oceanbase.odc.service.objectstorage.cloud" level="INFO" additivity="false">
            <AppenderRef ref="ExecutorFileAppender"/>
        </Logger>
        <Logger name="com.oceanbase.odc.service.plugin.PluginProperties" level="INFO" additivity="false">
            <AppenderRef ref="ExecutorFileAppender"/>
        </Logger>
        <!-- 执行器日志输出 end -->

        <!-- 任务日志输出，输出级别 INFO -->
        <Logger name="com.oceanbase.tools.migrator" level="INFO" additivity="false">
            <AppenderRef ref="TaskAllRoutingAppender"/>
            <AppenderRef ref="TaskWarnRoutingAppender"/>
        </Logger>

        <Logger name="com.oceanbase.odc" level="INFO" additivity="false">
            <AppenderRef ref="TaskAllRoutingAppender"/>
            <AppenderRef ref="TaskWarnRoutingAppender"/>
        </Logger>

        <!-- 其它程序日志输出，输出级别 WARN -->
        <Root level="WARN">
            <AppenderRef ref="TaskAllRoutingAppender"/>
            <AppenderRef ref="TaskWarnRoutingAppender"/>
        </Root>

    </Loggers>
</Configuration>